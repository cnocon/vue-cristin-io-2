*,
*::before,
*::after {
  box-sizing: border-box;
}

:root {
  font-size: $font-size-root;

  @if $enable-smooth-scroll {
    @media (prefers-reduced-motion: no-preference) {
      scroll-behavior: smooth;
    }
  }
}

body {
  margin: 0; // 1
  font-family: $font-family-base;
  @include font-size($font-size-base);
  font-weight: $font-weight-base;
  line-height: $line-height-base;
  color: $body-color;
  text-align: $body-text-align;
  background-color: $body-bg; // 2
  -webkit-text-size-adjust: 100%; // 3
  -webkit-tap-highlight-color: rgba($black, 0); // 4
}

%heading {
  margin-top: 0; // 1
  margin-bottom: $headings-margin-bottom;
  font-family: $headings-font-family;
  font-style: $headings-font-style;
  font-weight: $headings-font-weight;
  line-height: $headings-line-height;
  color: $headings-color;
}

p {
  margin-top: 0;
  margin-bottom: $paragraph-margin-bottom;
}

small {
  @include font-size($small-font-size);
}

sub,
sup {
  position: relative;
  @include font-size($sub-sup-font-size);
  line-height: 0;
  vertical-align: baseline;
}

sub { bottom: -.25em; }
sup { top: -.5em; }

a {
  color: $link-color;
  text-decoration: $link-decoration;

  &:hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }
}

a:not([href]):not([class]) {
  &,
  &:hover {
    color: inherit;
    text-decoration: none;
  }
}

[role="button"] {
  cursor: pointer;
}
.text-primary {color: $primary;}
.text-white { color: $white; }

// Alignment
.text-center {
  text-align: center;
}

.flex-center-md-down {
  @include media-breakpoint-down(md) {
    flex-wrap: wrap;
    display: flex;
    justify-content: center;
  }
}

.text-center {
  text-align: center;
}

html {
  font-family: $font-family-base;
  font-size: 16px;
  word-spacing: 1px;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  box-sizing: border-box;
  max-width: 100%;
  overflow-x: hidden;

  @include media-breakpoint-xxs-down {
    font-size: 13px;
  }
}

#__layout {
  max-width: 100%;
  overflow-x: hidden;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
}

body {
  color: $dark;
  font-size: 1rem;
  line-height: 1.618em;
  font-family: $font-family-base;
}

// // Type display classes
// @each $display, $font-size in $display-font-sizes {
//   .display-#{$display} {
//     @include font-size($font-size);
//     font-weight: $display-font-weight;
//     line-height: $display-line-height;
//   }
// }

// //
// // Emphasis
// //
// .small {
//   @extend small;
// }

// .mark {
//   @extend mark;
// }

//
// Lists
//

.list-unstyled {
  @include list-unstyled();
}

// Inline turns list items into inline-block
.list-inline {
  @include list-unstyled();
}
.list-inline-item {
  display: inline-block;

  &:not(:last-child) {
    margin-right: $list-inline-padding;
  }
}


//
// Misc
//

// Builds on `abbr`
.initialism {
  @include font-size($initialism-font-size);
  text-transform: uppercase;
}



h1 {
  font-family: $font-family-heading;
  font-weight: 700;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 2rem;
  margin-bottom: 1.25rem;
}

h2,
h3 {
  font-family: $font-family-heading;
  font-weight: 700;
}

h4 {
  font-family: $font-family-display;
  font-weight: 500;
  font-size: 1.3125rem;
  letter-spacing: 1px;

  @include media-breakpoint-down(md) {
    font-size: 1.25rem;
  }
}

h5,
h6 {
  font-family: $font-family-heading;
  text-transform: uppercase;
}

ol,
ul {
  display: block;
  padding-left: 0.25rem;
  margin-left: 1.5rem;

  &.list-style-none {
    list-style: none;
  }

  &.list-inline {
    display: flex;
    justify-content: flex-start;
    align-items: center;

    &.list-inline-centered {
      justify-content: center;
    }

    li {
      flex-grow: 0;
      flex-basis: auto;
      display: inline-block;
      margin-right: 0.875rem;

      &:last-of-type {
        margin-right: 0;
      }
    }
  }

  ol,
  ul {
    margin-top: 1rem;
    margin-bottom: 1.25rem;
  }

  &.list-style-none {
    list-style: none;
  }

  &.list-inline {
    padding-left: 0;
    margin-left: 0;

    li {
      display: inline-block;
    }
  }
}

li {
  margin-bottom: 0.875rem;
}

img {
  display: block;
  max-width: 100%;
}

p {
  margin-bottom: 1.25rem;
  line-height: 1.618em;
}

a {
  line-height: 1.618em;

  &:hover {
    text-decoration: none;
  }

  &.badge {
    border-bottom: 0;
  }

  &.btn-outline-primary {
    &:hover {
      border-bottom: 1px solid $primary;
    }
  }

  &[target='_blank']::after {
    content: '';
    display: block;
    margin-left: 0.5rem;
    background-image: url('~assets/images/box-arrow-up-right.svg');
    display: inline-block;
    width: 0.8125rem;
    height: 0.8125rem;
    background-size: 0.8125rem 0.8125rem;
  }
}

.badge {
  text-transform: uppercase;
  font-weight: 700;
  font-family: $font-family-display;
  letter-spacing: 1px;
  background-color: $dark;
}

pre,
pre code {
  color: #ffffff;
}

.nuxt-content-highlight {
  margin: 1.25rem 0;
  border-radius: 0.25rem !important;

  @include media-breakpoint-down(sm) {
    max-width: 100%;
    overflow-x: scroll;
  }

  code {
    @include media-breakpoint-down(sm) {
      min-width: 450px !important;
    }
  }
}

.badge {
  display: inline-block;
  padding: 0.35em 0.65em;
  font-size: 0.75em;
  font-weight: 600;
  line-height: 1;
  color: $white;
  text-align: center;
  white-space: nowrap;
  vertical-align: baseline;
  border-radius: 4px;

  // Empty badges collapse automatically
  &:empty {
    display: none;
  }
}

// Quick fix for badges in buttons
.btn .badge {
  position: relative;
  top: -1px;
}

.btn {
  display: inline-block;
  font-family: $font-family-base;
  font-weight: 600;
  line-height: 1.5em;
  color: $primary;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  background-color: transparent;
  border: 1px solid transparent;
  @include button-size(0.375rem, 0.75rem, 1rem, 4px);
  @include transition($btn-transition);

  &:hover {
    color: $body-color;
    text-decoration: if($link-hover-decoration == underline, none, null);
  }

  .btn-check:focus + &,
  &:focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  &.btn-primary {
    background-color: $primary;
    color: $white;
  }
}

.btn-link {
  font-weight: 400;
  color: $primary;
  text-decoration: none;

  &:hover {
    color: $white;
    background-color: $primary;
    text-decoration: none;
  }

  &:focus {
    text-decoration: none;
  }
}

@keyframes appear {
  0% {
    opacity: 0;
  }
}
